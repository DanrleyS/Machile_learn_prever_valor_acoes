import yfinance as yf
import pandas as pd

# Defina o ticker da a√ß√£o (exemplo: PETR4.SA)
ticker = "PETR4.SA"

# Baixar os dados hist√≥ricos (por exemplo, √∫ltimos 5 anos)
dados = yf.download(ticker, start="2020-01-01", end="2025-01-01")

# Exibir as colunas para diagn√≥stico
print("üîç Colunas do DataFrame antes da renomea√ß√£o:", dados.columns)

# Aplanar o MultiIndex para obter um √≠ndice simples
dados.columns = dados.columns.get_level_values(0)

# Exibir as colunas ap√≥s a aplanada
print("üîç Colunas do DataFrame ap√≥s aplanamento:", dados.columns)

# Garantir que o √≠ndice de datas seja transformado em uma coluna
dados.reset_index(inplace=True)  # Reseta o √≠ndice para que 'Date' se torne uma coluna

# Adicionar a coluna "Adj Close" manualmente, se necess√°rio
if "Adj Close" not in dados.columns:
    dados["Adj Close"] = dados["Close"]

# Verificar as colunas novamente ap√≥s a adi√ß√£o
print("üîç Colunas do DataFrame ap√≥s adicionar 'Adj Close':", dados.columns)

# Renomear as colunas conforme necess√°rio
if len(dados.columns) == 7:
    dados.columns = ["Date", "Open", "High", "Low", "Close", "Adj Close", "Volume"]
else:
    print(f"‚ö†Ô∏è O n√∫mero de colunas n√£o corresponde a 7. O DataFrame tem {len(dados.columns)} colunas.")
    print("üîç Colunas atuais:", dados.columns)

# Salvar os dados no arquivo CSV, se a renomea√ß√£o for bem-sucedida
if len(dados.columns) == 7:
    dados.to_csv("dados_brutos.csv", index=False)
    print("‚úÖ Dados coletados e salvos em 'dados_brutos.csv'")
